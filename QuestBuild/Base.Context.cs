//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuestBuild
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QuestBuildEntities : DbContext
    {
        public QuestBuildEntities()
            : base("name=QuestBuildEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Fakultet> Fakultet { get; set; }
        public virtual DbSet<Groups> Groups { get; set; }
        public virtual DbSet<Kafedra> Kafedra { get; set; }
        public virtual DbSet<Otvet> Otvet { get; set; }
        public virtual DbSet<Predmet> Predmet { get; set; }
        public virtual DbSet<Prepodavateli> Prepodavateli { get; set; }
        public virtual DbSet<Students> Students { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Tema> Tema { get; set; }
        public virtual DbSet<Tip_Voprosa> Tip_Voprosa { get; set; }
        public virtual DbSet<Vidi_Rabot> Vidi_Rabot { get; set; }
        public virtual DbSet<Vopros> Vopros { get; set; }
        public virtual DbSet<Zadanie> Zadanie { get; set; }
    
        [DbFunction("QuestBuildEntities", "fnGetReports")]
        public virtual IQueryable<fnGetReports_Result> fnGetReports(Nullable<int> iD_Temi)
        {
            var iD_TemiParameter = iD_Temi.HasValue ?
                new ObjectParameter("ID_Temi", iD_Temi) :
                new ObjectParameter("ID_Temi", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetReports_Result>("[QuestBuildEntities].[fnGetReports](@ID_Temi)", iD_TemiParameter);
        }
    
        [DbFunction("QuestBuildEntities", "fnGetTema")]
        public virtual IQueryable<fnGetTema_Result> fnGetTema(string n_Temi)
        {
            var n_TemiParameter = n_Temi != null ?
                new ObjectParameter("N_Temi", n_Temi) :
                new ObjectParameter("N_Temi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnGetTema_Result>("[QuestBuildEntities].[fnGetTema](@N_Temi)", n_TemiParameter);
        }
    }
}
